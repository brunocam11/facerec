[tool.poetry]
name = "facerec"
version = "0.1.0"
description = "Self-hosted facial recognition service compatible with AWS Rekognition"
authors = ["Bruno Camargo <brunocam1195@gmail.com>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
fastapi = "^0.115.6"
uvicorn = {extras = ["standard"], version = "^0.34.0"}
pydantic = {extras = ["email"], version = "^2.10.5"}
pydantic-settings = "^2.7.1"
structlog = "^24.4.0"
setuptools = "^75.8.0"
insightface = "^0.7.3"
onnxruntime = "^1.17.0"
pinecone-client = "^5.0.1"
opencv-python-headless = "^4.11.0.86"
numpy = "^2.2.3"
python-multipart = "^0.0.20"
streamlit = "^1.42.2"
boto3 = "^1.37.3"
requests = "^2.32.3"
ray = "^2.43.0"
psutil = "^7.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-asyncio = "^0.25.2"
pytest-cov = "^6.0.0"
black = "^24.10.0"
isort = "^5.13.2"
mypy = "^1.14.1"
ruff = "^0.9.1"

[tool.poetry.scripts]
detect-faces = "app.cli.detect_faces:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.11"
strict = true
ignore_missing_imports = true

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.pytest.ini_options]
pythonpath = "."
testpaths = ["tests"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
python_files = "test_*.py"
